{
  "address": "0x1B45059a73e96E380F75c8aC4e980d32f7560d21",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b0ed10849f35e5cfa2de5cfe4786fc68d2f71724f36517612c14b6563f32089",
  "receipt": {
    "to": null,
    "from": "0x6f55456D56d3B841aeC061ad613460ABF93Bc2DA",
    "contractAddress": "0x1B45059a73e96E380F75c8aC4e980d32f7560d21",
    "transactionIndex": 68,
    "gasUsed": "1040732",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000020000000000000000000800000000000000000000000010000000000000000000000000000000800001000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000008000000000000000000000000000000000000000020000000000000008000000000000000000000000000000000000000000000000000",
    "blockHash": "0x3f527874293b5bd446fe4ae28dfb71d92a4948f6b2ac19ec26d227cf5d0b6112",
    "transactionHash": "0x1b0ed10849f35e5cfa2de5cfe4786fc68d2f71724f36517612c14b6563f32089",
    "logs": [
      {
        "transactionIndex": 68,
        "blockNumber": 8211539,
        "transactionHash": "0x1b0ed10849f35e5cfa2de5cfe4786fc68d2f71724f36517612c14b6563f32089",
        "address": "0x1B45059a73e96E380F75c8aC4e980d32f7560d21",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006f55456d56d3b841aec061ad613460abf93bc2da"
        ],
        "data": "0x000000000000000000000000002cd76fe086b93ce2f768a00b22a00000000000",
        "logIndex": 133,
        "blockHash": "0x3f527874293b5bd446fe4ae28dfb71d92a4948f6b2ac19ec26d227cf5d0b6112"
      }
    ],
    "blockNumber": 8211539,
    "cumulativeGasUsed": "9570277",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1b47c86488a07b33b674de3e1fd50bb5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SolarChainCoin.sol\":\"PaymentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SolarChainCoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.25;\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n\\r\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20Errors {\\r\\n    error ERC20InsufficientBalance(\\r\\n        address sender,\\r\\n        uint256 balance,\\r\\n        uint256 needed\\r\\n    );\\r\\n\\r\\n    error ERC20InvalidSender(address sender);\\r\\n\\r\\n    error ERC20InvalidReceiver(address receiver);\\r\\n\\r\\n    error ERC20InsufficientAllowance(\\r\\n        address spender,\\r\\n        uint256 allowance,\\r\\n        uint256 needed\\r\\n    );\\r\\n\\r\\n    error ERC20InvalidApprover(address approver);\\r\\n\\r\\n    error ERC20InvalidSpender(address spender);\\r\\n}\\r\\n\\r\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\r\\n    mapping(address account => uint256) private _balances;\\r\\n\\r\\n    mapping(address account => mapping(address spender => uint256))\\r\\n        private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    function name() public view virtual returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view virtual returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view virtual returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view virtual returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view virtual returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) public virtual returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, value);\\r\\n        _transfer(from, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 value) internal {\\r\\n        if (from == address(0)) {\\r\\n            revert ERC20InvalidSender(address(0));\\r\\n        }\\r\\n        if (to == address(0)) {\\r\\n            revert ERC20InvalidReceiver(address(0));\\r\\n        }\\r\\n        _update(from, to, value);\\r\\n    }\\r\\n\\r\\n    function _update(address from, address to, uint256 value) internal virtual {\\r\\n        if (from == address(0)) {\\r\\n            _totalSupply += value;\\r\\n        } else {\\r\\n            uint256 fromBalance = _balances[from];\\r\\n            if (fromBalance < value) {\\r\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\r\\n            }\\r\\n            unchecked {\\r\\n                _balances[from] = fromBalance - value;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (to == address(0)) {\\r\\n            unchecked {\\r\\n                _totalSupply -= value;\\r\\n            }\\r\\n        } else {\\r\\n            unchecked {\\r\\n                _balances[to] += value;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 value) internal {\\r\\n        if (account == address(0)) {\\r\\n            revert ERC20InvalidReceiver(address(0));\\r\\n        }\\r\\n        _update(address(0), account, value);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 value) internal {\\r\\n        if (account == address(0)) {\\r\\n            revert ERC20InvalidSender(address(0));\\r\\n        }\\r\\n        _update(account, address(0), value);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 value) internal {\\r\\n        _approve(owner, spender, value, true);\\r\\n    }\\r\\n\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        bool emitEvent\\r\\n    ) internal virtual {\\r\\n        if (owner == address(0)) {\\r\\n            revert ERC20InvalidApprover(address(0));\\r\\n        }\\r\\n        if (spender == address(0)) {\\r\\n            revert ERC20InvalidSpender(address(0));\\r\\n        }\\r\\n        _allowances[owner][spender] = value;\\r\\n        if (emitEvent) {\\r\\n            emit Approval(owner, spender, value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance < type(uint256).max) {\\r\\n            if (currentAllowance < value) {\\r\\n                revert ERC20InsufficientAllowance(\\r\\n                    spender,\\r\\n                    currentAllowance,\\r\\n                    value\\r\\n                );\\r\\n            }\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - value, false);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract PaymentToken is ERC20 {\\r\\n    error NotOwner();\\r\\n    address private owner;\\r\\n    constructor() ERC20(\\\"Payment Token\\\", \\\"PaymentToken\\\") {\\r\\n        _mint(msg.sender, 1000000000000000000000000000 * 10 ** decimals());\\r\\n    }\\r\\n\\r\\n    function mint(address to, uint256 amount) external {\\r\\n        if (msg.sender != owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x584854938d109599d58106a9822d4a2a5e84844e62a4253c69ad7896de261c12\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600d81526020017f5061796d656e7420546f6b656e000000000000000000000000000000000000008152506040518060400160405280600c81526020017f5061796d656e74546f6b656e0000000000000000000000000000000000000000815250816003908161008c91906105ea565b50806004908161009c91906105ea565b5050506100df336100b16100e460201b60201c565b600a6100bd919061082b565b6b033b2e3c9fd0803ce80000006100d49190610876565b6100ed60201b60201c565b6109a9565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361015f5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161015691906108f9565b60405180910390fd5b6101716000838361017560201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101c75780600260008282546101bb9190610914565b9250508190555061029a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610253578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161024a93929190610957565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102e35780600260008282540392505081905550610330565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161038d919061098e565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061041b57607f821691505b60208210810361042e5761042d6103d4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610459565b6104a08683610459565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006104e76104e26104dd846104b8565b6104c2565b6104b8565b9050919050565b6000819050919050565b610501836104cc565b61051561050d826104ee565b848454610466565b825550505050565b600090565b61052a61051d565b6105358184846104f8565b505050565b5b818110156105595761054e600082610522565b60018101905061053b565b5050565b601f82111561059e5761056f81610434565b61057884610449565b81016020851015610587578190505b61059b61059385610449565b83018261053a565b50505b505050565b600082821c905092915050565b60006105c1600019846008026105a3565b1980831691505092915050565b60006105da83836105b0565b9150826002028217905092915050565b6105f38261039a565b67ffffffffffffffff81111561060c5761060b6103a5565b5b6106168254610403565b61062182828561055d565b600060209050601f8311600181146106545760008415610642578287015190505b61064c85826105ce565b8655506106b4565b601f19841661066286610434565b60005b8281101561068a57848901518255600182019150602085019450602081019050610665565b868310156106a757848901516106a3601f8916826105b0565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156107425780860481111561071e5761071d6106bc565b5b600185161561072d5780820291505b808102905061073b856106eb565b9450610702565b94509492505050565b60008261075b5760019050610817565b816107695760009050610817565b816001811461077f5760028114610789576107b8565b6001915050610817565b60ff84111561079b5761079a6106bc565b5b8360020a9150848211156107b2576107b16106bc565b5b50610817565b5060208310610133831016604e8410600b84101617156107ed5782820a9050838111156107e8576107e76106bc565b5b610817565b6107fa84848460016106f8565b92509050818404811115610811576108106106bc565b5b81810290505b9392505050565b600060ff82169050919050565b6000610836826104b8565b91506108418361081e565b925061086e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461074b565b905092915050565b6000610881826104b8565b915061088c836104b8565b925082820261089a816104b8565b915082820484148315176108b1576108b06106bc565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e3826108b8565b9050919050565b6108f3816108d8565b82525050565b600060208201905061090e60008301846108ea565b92915050565b600061091f826104b8565b915061092a836104b8565b9250828201905080821115610942576109416106bc565b5b92915050565b610951816104b8565b82525050565b600060608201905061096c60008301866108ea565b6109796020830185610948565b6109866040830184610948565b949350505050565b60006020820190506109a36000830184610948565b92915050565b610f94806109b86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610be8565b60405180910390f35b6100db60048036038101906100d69190610ca3565b6102b9565b6040516100e89190610cfe565b60405180910390f35b6100f96102dc565b6040516101069190610d28565b60405180910390f35b61012960048036038101906101249190610d43565b6102e6565b6040516101369190610cfe565b60405180910390f35b610147610315565b6040516101549190610db2565b60405180910390f35b61017760048036038101906101729190610ca3565b61031e565b005b610193600480360381019061018e9190610dcd565b6103b3565b6040516101a09190610d28565b60405180910390f35b6101b16103fb565b6040516101be9190610be8565b60405180910390f35b6101e160048036038101906101dc9190610ca3565b61048d565b6040516101ee9190610cfe565b60405180910390f35b610211600480360381019061020c9190610dfa565b6104b0565b60405161021e9190610d28565b60405180910390f35b60606003805461023690610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610e69565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c4610537565b90506102d181858561053f565b600191505092915050565b6000600254905090565b6000806102f1610537565b90506102fe858285610551565b6103098585856105e6565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103af82826106da565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461040a90610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461043690610e69565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b600080610498610537565b90506104a58185856105e6565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61054c838383600161075c565b505050565b600061055d84846104b0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105e057818110156105d0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016105c793929190610ea9565b60405180910390fd5b6105df8484848403600061075c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106585760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161064f9190610ee0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ca5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106c19190610ee0565b60405180910390fd5b6106d5838383610933565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361074c5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107439190610ee0565b60405180910390fd5b61075860008383610933565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107ce5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107c59190610ee0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108405760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108379190610ee0565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561092d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109249190610d28565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109855780600260008282546109799190610f2a565b92505081905550610a58565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a11578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0893929190610ea9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa15780600260008282540392505081905550610aee565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b4b9190610d28565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b92578082015181840152602081019050610b77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bba82610b58565b610bc48185610b63565b9350610bd4818560208601610b74565b610bdd81610b9e565b840191505092915050565b60006020820190508181036000830152610c028184610baf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3a82610c0f565b9050919050565b610c4a81610c2f565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b6000819050919050565b610c8081610c6d565b8114610c8b57600080fd5b50565b600081359050610c9d81610c77565b92915050565b60008060408385031215610cba57610cb9610c0a565b5b6000610cc885828601610c58565b9250506020610cd985828601610c8e565b9150509250929050565b60008115159050919050565b610cf881610ce3565b82525050565b6000602082019050610d136000830184610cef565b92915050565b610d2281610c6d565b82525050565b6000602082019050610d3d6000830184610d19565b92915050565b600080600060608486031215610d5c57610d5b610c0a565b5b6000610d6a86828701610c58565b9350506020610d7b86828701610c58565b9250506040610d8c86828701610c8e565b9150509250925092565b600060ff82169050919050565b610dac81610d96565b82525050565b6000602082019050610dc76000830184610da3565b92915050565b600060208284031215610de357610de2610c0a565b5b6000610df184828501610c58565b91505092915050565b60008060408385031215610e1157610e10610c0a565b5b6000610e1f85828601610c58565b9250506020610e3085828601610c58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e8157607f821691505b602082108103610e9457610e93610e3a565b5b50919050565b610ea381610c2f565b82525050565b6000606082019050610ebe6000830186610e9a565b610ecb6020830185610d19565b610ed86040830184610d19565b949350505050565b6000602082019050610ef56000830184610e9a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3582610c6d565b9150610f4083610c6d565b9250828201905080821115610f5857610f57610efb565b5b9291505056fea264697066735822122099a419804316f02c056b564a052afa54b1281c5eb4b154da1a89d846e64d2d9364736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610be8565b60405180910390f35b6100db60048036038101906100d69190610ca3565b6102b9565b6040516100e89190610cfe565b60405180910390f35b6100f96102dc565b6040516101069190610d28565b60405180910390f35b61012960048036038101906101249190610d43565b6102e6565b6040516101369190610cfe565b60405180910390f35b610147610315565b6040516101549190610db2565b60405180910390f35b61017760048036038101906101729190610ca3565b61031e565b005b610193600480360381019061018e9190610dcd565b6103b3565b6040516101a09190610d28565b60405180910390f35b6101b16103fb565b6040516101be9190610be8565b60405180910390f35b6101e160048036038101906101dc9190610ca3565b61048d565b6040516101ee9190610cfe565b60405180910390f35b610211600480360381019061020c9190610dfa565b6104b0565b60405161021e9190610d28565b60405180910390f35b60606003805461023690610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610e69565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c4610537565b90506102d181858561053f565b600191505092915050565b6000600254905090565b6000806102f1610537565b90506102fe858285610551565b6103098585856105e6565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103af82826106da565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461040a90610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461043690610e69565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b600080610498610537565b90506104a58185856105e6565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61054c838383600161075c565b505050565b600061055d84846104b0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105e057818110156105d0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016105c793929190610ea9565b60405180910390fd5b6105df8484848403600061075c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106585760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161064f9190610ee0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ca5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106c19190610ee0565b60405180910390fd5b6106d5838383610933565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361074c5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107439190610ee0565b60405180910390fd5b61075860008383610933565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107ce5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107c59190610ee0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108405760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108379190610ee0565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561092d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109249190610d28565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109855780600260008282546109799190610f2a565b92505081905550610a58565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a11578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0893929190610ea9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa15780600260008282540392505081905550610aee565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b4b9190610d28565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b92578082015181840152602081019050610b77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bba82610b58565b610bc48185610b63565b9350610bd4818560208601610b74565b610bdd81610b9e565b840191505092915050565b60006020820190508181036000830152610c028184610baf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3a82610c0f565b9050919050565b610c4a81610c2f565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b6000819050919050565b610c8081610c6d565b8114610c8b57600080fd5b50565b600081359050610c9d81610c77565b92915050565b60008060408385031215610cba57610cb9610c0a565b5b6000610cc885828601610c58565b9250506020610cd985828601610c8e565b9150509250929050565b60008115159050919050565b610cf881610ce3565b82525050565b6000602082019050610d136000830184610cef565b92915050565b610d2281610c6d565b82525050565b6000602082019050610d3d6000830184610d19565b92915050565b600080600060608486031215610d5c57610d5b610c0a565b5b6000610d6a86828701610c58565b9350506020610d7b86828701610c58565b9250506040610d8c86828701610c8e565b9150509250925092565b600060ff82169050919050565b610dac81610d96565b82525050565b6000602082019050610dc76000830184610da3565b92915050565b600060208284031215610de357610de2610c0a565b5b6000610df184828501610c58565b91505092915050565b60008060408385031215610e1157610e10610c0a565b5b6000610e1f85828601610c58565b9250506020610e3085828601610c58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e8157607f821691505b602082108103610e9457610e93610e3a565b5b50919050565b610ea381610c2f565b82525050565b6000606082019050610ebe6000830186610e9a565b610ecb6020830185610d19565b610ed86040830184610d19565b949350505050565b6000602082019050610ef56000830184610e9a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3582610c6d565b9150610f4083610c6d565b9250828201905080821115610f5857610f57610efb565b5b9291505056fea264697066735822122099a419804316f02c056b564a052afa54b1281c5eb4b154da1a89d846e64d2d9364736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 158,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 164,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 166,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 168,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 170,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 639,
        "contract": "contracts/SolarChainCoin.sol:PaymentToken",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}