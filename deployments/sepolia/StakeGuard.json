{
  "address": "0x2Dcfb2c7d0D304bcd1518ec9e4d0Ec5A296091FF",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyUnstaked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmountZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DurationNotOver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotStaker",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TotalAllocationReached",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum StakeGuard.PackageType",
          "name": "packageType",
          "type": "uint8"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "enableStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "fetchUserStakeInfos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakeId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUnstaked",
              "type": "bool"
            },
            {
              "internalType": "enum StakeGuard.PackageType",
              "name": "package",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.StakeInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPYPackage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "oneMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threeMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sixMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "twelveMonth",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.APYPackage",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPackageDuration",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "oneMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threeMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sixMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "twelveMonth",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.PackageDuration",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPackageType",
      "outputs": [
        {
          "internalType": "enum StakeGuard.PackageType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardAccumulated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakeId",
          "type": "uint256"
        }
      ],
      "name": "getStakeIdToStakeInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakeId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUnstaked",
              "type": "bool"
            },
            {
              "internalType": "enum StakeGuard.PackageType",
              "name": "package",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.StakeInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalAllocationForReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserStakeIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "oneMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threeMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sixMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "twelveMonth",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.APYPackage",
          "name": "_apy",
          "type": "tuple"
        }
      ],
      "name": "setAPYPackage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "oneMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threeMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sixMonth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "twelveMonth",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeGuard.PackageDuration",
          "name": "_packageDuration",
          "type": "tuple"
        }
      ],
      "name": "setPackageDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalAllocationForReward",
          "type": "uint256"
        }
      ],
      "name": "setTotalAllocationForReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum StakeGuard.PackageType",
          "name": "_packageType",
          "type": "uint8"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakeId",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x05beeef64476737415eaa6162ad83d6595e99092974e73be9ef4dcab56cda9d5",
  "receipt": {
    "to": null,
    "from": "0x6f55456D56d3B841aeC061ad613460ABF93Bc2DA",
    "contractAddress": "0x2Dcfb2c7d0D304bcd1518ec9e4d0Ec5A296091FF",
    "transactionIndex": 51,
    "gasUsed": "2054815",
    "logsBloom": "0x00000000000000000000000000000800000000000000000000800000000000008000000000000000000000000000000000000000000000000000080000000000000000000000000000000000400000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x1abadb9b0f128ca74f37c7e123ffa12b4fb989c77705fe2f720c8a91751c488c",
    "transactionHash": "0x05beeef64476737415eaa6162ad83d6595e99092974e73be9ef4dcab56cda9d5",
    "logs": [
      {
        "transactionIndex": 51,
        "blockNumber": 8064759,
        "transactionHash": "0x05beeef64476737415eaa6162ad83d6595e99092974e73be9ef4dcab56cda9d5",
        "address": "0x2Dcfb2c7d0D304bcd1518ec9e4d0Ec5A296091FF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006f55456d56d3b841aec061ad613460abf93bc2da"
        ],
        "data": "0x",
        "logIndex": 75,
        "blockHash": "0x1abadb9b0f128ca74f37c7e123ffa12b4fb989c77705fe2f720c8a91751c488c"
      }
    ],
    "blockNumber": 8064759,
    "cumulativeGasUsed": "11651373",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e37101f844232e5f707f972a316c3f97",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyUnstaked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DurationNotOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotStaker\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalAllocationReached\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum StakeGuard.PackageType\",\"name\":\"packageType\",\"type\":\"uint8\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"enableStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"fetchUserStakeInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isUnstaked\",\"type\":\"bool\"},{\"internalType\":\"enum StakeGuard.PackageType\",\"name\":\"package\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.StakeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPYPackage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oneMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threeMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sixMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twelveMonth\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.APYPackage\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPackageDuration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oneMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threeMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sixMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twelveMonth\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.PackageDuration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPackageType\",\"outputs\":[{\"internalType\":\"enum StakeGuard.PackageType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAccumulated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeId\",\"type\":\"uint256\"}],\"name\":\"getStakeIdToStakeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isUnstaked\",\"type\":\"bool\"},{\"internalType\":\"enum StakeGuard.PackageType\",\"name\":\"package\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.StakeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAllocationForReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserStakeIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oneMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threeMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sixMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twelveMonth\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.APYPackage\",\"name\":\"_apy\",\"type\":\"tuple\"}],\"name\":\"setAPYPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oneMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threeMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sixMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twelveMonth\",\"type\":\"uint256\"}],\"internalType\":\"struct StakeGuard.PackageDuration\",\"name\":\"_packageDuration\",\"type\":\"tuple\"}],\"name\":\"setPackageDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalAllocationForReward\",\"type\":\"uint256\"}],\"name\":\"setTotalAllocationForReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum StakeGuard.PackageType\",\"name\":\"_packageType\",\"type\":\"uint8\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakeGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n\\r\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n    error OwnableUnauthorizedAccount(address account);\\r\\n\\r\\n    error OwnableInvalidOwner(address owner);\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(address initialOwner) {\\r\\n        if (initialOwner == address(0)) {\\r\\n            revert OwnableInvalidOwner(address(0));\\r\\n        }\\r\\n        _transferOwnership(initialOwner);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function _checkOwner() internal view virtual {\\r\\n        if (owner() != _msgSender()) {\\r\\n            revert OwnableUnauthorizedAccount(_msgSender());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        if (newOwner == address(0)) {\\r\\n            revert OwnableInvalidOwner(address(0));\\r\\n        }\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\ninterface IERC20 {\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract StakeGuard is Ownable {\\r\\n    error AmountZero();\\r\\n    error TotalAllocationReached();\\r\\n    error NotStaker();\\r\\n    error AlreadyUnstaked();\\r\\n    error DurationNotOver();\\r\\n\\r\\n    IERC20 private token;\\r\\n    uint256 private stakeId;\\r\\n    uint256 private totalAllocationForReward = 11000000 * 10 ** 18;\\r\\n    uint256 private rewardAccumulated;\\r\\n    enum PackageType {\\r\\n        OneMonth,\\r\\n        ThreeMonths,\\r\\n        SixMonths,\\r\\n        TwelveMonths\\r\\n    }\\r\\n\\r\\n    struct PackageDuration {\\r\\n        uint256 oneMonth;\\r\\n        uint256 threeMonth;\\r\\n        uint256 sixMonth;\\r\\n        uint256 twelveMonth;\\r\\n    }\\r\\n    struct APYPackage {\\r\\n        uint256 oneMonth;\\r\\n        uint256 threeMonth;\\r\\n        uint256 sixMonth;\\r\\n        uint256 twelveMonth;\\r\\n    }\\r\\n\\r\\n    struct StakeInfo {\\r\\n        uint256 stakeId;\\r\\n        address staker;\\r\\n        uint256 stakedAt;\\r\\n        uint256 unstakeAt;\\r\\n        uint256 stakedAmount;\\r\\n        bool isUnstaked;\\r\\n        PackageType package;\\r\\n        uint256 reward;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => StakeInfo) private stakeIdToStakeInfo;\\r\\n    mapping(address => uint256[]) private userStakeIds;\\r\\n\\r\\n    APYPackage private apy;\\r\\n    PackageDuration private packageDuration;\\r\\n    PackageType private packageType;\\r\\n\\r\\n    event Staked(address indexed user, uint256 amount, PackageType packageType);\\r\\n    event Unstaked(address indexed user, uint256 amount);\\r\\n\\r\\n    constructor() Ownable(msg.sender) {\\r\\n        apy = APYPackage(3, 5, 8, 11);\\r\\n        packageDuration = PackageDuration(\\r\\n            30 days,\\r\\n            3 * 30 days,\\r\\n            6 * 30 days,\\r\\n            12 * 30 days\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getToken() public view returns (IERC20) {\\r\\n        return token;\\r\\n    }\\r\\n\\r\\n    function getStakeId() public view returns (uint256) {\\r\\n        return stakeId;\\r\\n    }\\r\\n    function getRewardAccumulated() public view returns (uint256) {\\r\\n        return rewardAccumulated;\\r\\n    }\\r\\n\\r\\n    function getTotalAllocationForReward() public view returns (uint256) {\\r\\n        return totalAllocationForReward;\\r\\n    }\\r\\n\\r\\n    function getAPYPackage() public view returns (APYPackage memory) {\\r\\n        return apy;\\r\\n    }\\r\\n\\r\\n    function getPackageDuration() public view returns (PackageDuration memory) {\\r\\n        return packageDuration;\\r\\n    }\\r\\n\\r\\n    function getPackageType() public view returns (PackageType) {\\r\\n        return packageType;\\r\\n    }\\r\\n\\r\\n    function getUserStakeIds(\\r\\n        address _user\\r\\n    ) public view returns (uint256[] memory) {\\r\\n        return userStakeIds[_user];\\r\\n    }\\r\\n\\r\\n    function getStakeIdToStakeInfo(\\r\\n        uint256 _stakeId\\r\\n    ) public view returns (StakeInfo memory) {\\r\\n        return stakeIdToStakeInfo[_stakeId];\\r\\n    }\\r\\n\\r\\n    function fetchUserStakeInfos(\\r\\n        address _user\\r\\n    ) public view returns (StakeInfo[] memory) {\\r\\n        uint256[] memory listOfIds = userStakeIds[_user];\\r\\n        StakeInfo[] memory items = new StakeInfo[](listOfIds.length);\\r\\n        for (uint256 i = 0; i < listOfIds.length; i++) {\\r\\n            uint256 __id = listOfIds[i];\\r\\n            items[__id] = stakeIdToStakeInfo[__id];\\r\\n        }\\r\\n        return items;\\r\\n    }\\r\\n\\r\\n    function enableStaking(address _token) public onlyOwner {\\r\\n        token = IERC20(_token);\\r\\n        token.transferFrom(msg.sender, address(this), totalAllocationForReward);\\r\\n    }\\r\\n\\r\\n    function setTotalAllocationForReward(\\r\\n        uint256 _totalAllocationForReward\\r\\n    ) public onlyOwner {\\r\\n        totalAllocationForReward = _totalAllocationForReward;\\r\\n    }\\r\\n\\r\\n    function setAPYPackage(APYPackage memory _apy) public onlyOwner {\\r\\n        apy = _apy;\\r\\n    }\\r\\n\\r\\n    function setPackageDuration(\\r\\n        PackageDuration memory _packageDuration\\r\\n    ) public onlyOwner {\\r\\n        packageDuration = _packageDuration;\\r\\n    }\\r\\n\\r\\n    function stake(uint256 amount, PackageType _packageType) external {\\r\\n        if (amount == 0) {\\r\\n            revert AmountZero();\\r\\n        }\\r\\n        stakeId++;\\r\\n        token.transferFrom(msg.sender, address(this), amount);\\r\\n        uint256 ut = _packageType == PackageType.OneMonth\\r\\n            ? packageDuration.oneMonth\\r\\n            : _packageType == PackageType.ThreeMonths\\r\\n                ? packageDuration.threeMonth\\r\\n                : _packageType == PackageType.SixMonths\\r\\n                    ? packageDuration.sixMonth\\r\\n                    : packageDuration.twelveMonth;\\r\\n        uint256 __apy = _packageType == PackageType.OneMonth\\r\\n            ? apy.oneMonth\\r\\n            : _packageType == PackageType.ThreeMonths\\r\\n                ? apy.threeMonth\\r\\n                : _packageType == PackageType.SixMonths\\r\\n                    ? apy.sixMonth\\r\\n                    : apy.twelveMonth;\\r\\n        uint256 _precision = _packageType == PackageType.OneMonth\\r\\n            ? 1\\r\\n            : _packageType == PackageType.ThreeMonths\\r\\n                ? 3\\r\\n                : _packageType == PackageType.SixMonths\\r\\n                    ? 6\\r\\n                    : 12;\\r\\n        uint256 _reward = ((amount * __apy) / 100) / (12 / _precision);\\r\\n        rewardAccumulated += _reward;\\r\\n        if (rewardAccumulated > totalAllocationForReward) {\\r\\n            revert TotalAllocationReached();\\r\\n        }\\r\\n        userStakeIds[msg.sender].push(stakeId);\\r\\n        stakeIdToStakeInfo[stakeId] = StakeInfo(\\r\\n            stakeId,\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            block.timestamp + ut,\\r\\n            amount,\\r\\n            false,\\r\\n            _packageType,\\r\\n            _reward\\r\\n        );\\r\\n\\r\\n        emit Staked(msg.sender, amount, packageType);\\r\\n    }\\r\\n\\r\\n    function unstake(uint256 _stakeId) public {\\r\\n        StakeInfo storage info = stakeIdToStakeInfo[_stakeId];\\r\\n        if (info.staker != msg.sender) {\\r\\n            revert NotStaker();\\r\\n        }\\r\\n        if (info.isUnstaked) {\\r\\n            revert AlreadyUnstaked();\\r\\n        }\\r\\n        if (block.timestamp < info.unstakeAt) {\\r\\n            revert DurationNotOver();\\r\\n        }\\r\\n        info.isUnstaked = true;\\r\\n        token.transfer(info.staker, info.stakedAmount + info.reward);\\r\\n        emit Unstaked(msg.sender, info.stakedAmount + info.reward);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x339600b9c969e40d95662f971bd46f08fa0d3a0447d70bebdc95b882920462c9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526a09195731e2ce35eb00000060035534801561001f57600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100935760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161008a919061025a565b60405180910390fd5b6100a28161015560201b60201c565b506040518060800160405280600381526020016005815260200160088152602001600b815250600760008201518160000155602082015181600101556040820151816002015560608201518160030155905050604051806080016040528062278d0081526020016276a700815260200162ed4e0081526020016301da9c00815250600b60008201518160000155602082015181600101556040820151816002015560608201518160030155905050610275565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024482610219565b9050919050565b61025481610239565b82525050565b600060208201905061026f600083018461024b565b92915050565b612014806102846000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806383c4bc91116100ad578063e91cc62411610071578063e91cc624146102bc578063ecdb086c146102da578063f2fde38b146102f8578063fa6916c314610314578063fbc82be01461034457610121565b806383c4bc911461022857806386c7e257146102465780638da5cb5b146102645780639427862014610282578063b3db78801461029e57610121565b8063313da78f116100f4578063313da78f1461019a578063440ba5b9146101ca57806369ec6357146101e6578063715018a614610202578063732a764e1461020c57610121565b806310087fb11461012657806321df0da7146101425780632602c8d4146101605780632e17de781461017e575b600080fd5b610140600480360381019061013b9190611522565b610374565b005b61014a61091b565b60405161015791906115e1565b60405180910390f35b610168610945565b6040516101759190611660565b60405180910390f35b6101986004803603810190610193919061167b565b610987565b005b6101b460048036038101906101af91906116e6565b610c08565b6040516101c191906117c2565b60405180910390f35b6101e460048036038101906101df919061167b565b610c9f565b005b61020060048036038101906101fb91906116e6565b610cb1565b005b61020a610da2565b005b610226600480360381019061022191906118ed565b610db6565b005b610230610def565b60405161023d9190611929565b60405180910390f35b61024e610df9565b60405161025b9190611929565b60405180910390f35b61026c610e03565b6040516102799190611953565b60405180910390f35b61029c600480360381019061029791906119e6565b610e2c565b005b6102a6610e65565b6040516102b39190611929565b60405180910390f35b6102c4610e6f565b6040516102d19190611a8a565b60405180910390f35b6102e2610e86565b6040516102ef9190611afa565b60405180910390f35b610312600480360381019061030d91906116e6565b610ec8565b005b61032e6004803603810190610329919061167b565b610f4e565b60405161033b9190611bf0565b60405180910390f35b61035e600480360381019061035991906116e6565b61105a565b60405161036b9190611d5e565b60405180910390f35b600082036103ae576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008154809291906103c190611daf565b9190505550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161042593929190611df7565b6020604051808303816000875af1158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190611e5a565b50600080600381111561047e5761047d611a13565b5b82600381111561049157610490611a13565b5b1461051157600160038111156104aa576104a9611a13565b5b8260038111156104bd576104bc611a13565b5b1461050557600260038111156104d6576104d5611a13565b5b8260038111156104e9576104e8611a13565b5b146104f957600b60030154610500565b600b600201545b61050c565b600b600101545b610518565b600b600001545b9050600080600381111561052f5761052e611a13565b5b83600381111561054257610541611a13565b5b146105c2576001600381111561055b5761055a611a13565b5b83600381111561056e5761056d611a13565b5b146105b6576002600381111561058757610586611a13565b5b83600381111561059a57610599611a13565b5b146105aa576007600301546105b1565b6007600201545b6105bd565b6007600101545b6105c9565b6007600001545b905060008060038111156105e0576105df611a13565b5b8460038111156105f3576105f2611a13565b5b14610667576001600381111561060c5761060b611a13565b5b84600381111561061f5761061e611a13565b5b1461065f576002600381111561063857610637611a13565b5b84600381111561064b5761064a611a13565b5b1461065757600c61065a565b60065b610662565b60035b61066a565b60015b60ff169050600081600c61067e9190611eb6565b6064848861068c9190611ee7565b6106969190611eb6565b6106a09190611eb6565b905080600460008282546106b49190611f29565b9250508190555060035460045411156106f9576040517f9399240300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600254908060018154018082558091505060019003906000526020600020016000909190919091505560405180610100016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185426107a39190611f29565b81526020018781526020016000151581526020018660038111156107ca576107c9611a13565b5b8152602001828152506005600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff021916908360038111156108a2576108a1611a13565b5b021790555060e082015181600601559050503373ffffffffffffffffffffffffffffffffffffffff167f8acf475137e0cd74ca7f611d16b1e6383ec9a9c71a8e5b85967781b9c7214d1187600f60009054906101000a900460ff1660405161090b929190611f5d565b60405180910390a2505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61094d6113f9565b6007604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b60006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a27576040517f59cc8a2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160009054906101000a900460ff1615610a70576040517fd831531200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030154421015610aae576040517fa84ca57100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600601548460040154610b429190611f29565b6040518363ffffffff1660e01b8152600401610b5f929190611f86565b6020604051808303816000875af1158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190611e5a565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7582600601548360040154610bef9190611f29565b604051610bfc9190611929565b60405180910390a25050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c9357602002820191906000526020600020905b815481526020019060010190808311610c7f575b50505050509050919050565b610ca76112a6565b8060038190555050565b610cb96112a6565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306003546040518463ffffffff1660e01b8152600401610d5b93929190611df7565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e9190611e5a565b5050565b610daa6112a6565b610db4600061132d565b565b610dbe6112a6565b80600b6000820151816000015560208201518160010155604082015181600201556060820151816003015590505050565b6000600454905090565b6000600354905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e346112a6565b8060076000820151816000015560208201518160010155604082015181600201556060820151816003015590505050565b6000600254905090565b6000600f60009054906101000a900460ff16905090565b610e8e611421565b600b604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b610ed06112a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f399190611953565b60405180910390fd5b610f4b8161132d565b50565b610f56611449565b6005600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16600381111561103357611032611a13565b5b600381111561104557611044611a13565b5b81526020016006820154815250509050919050565b60606000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156110e757602002820191906000526020600020905b8154815260200190600101908083116110d3575b505050505090506000815167ffffffffffffffff81111561110b5761110a6117fa565b5b60405190808252806020026020018201604052801561114457816020015b611131611449565b8152602001906001900390816111295790505b50905060005b825181101561129b57600083828151811061116857611167611faf565b5b602002602001015190506005600082815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16600381111561124f5761124e611a13565b5b600381111561126157611260611a13565b5b815260200160068201548152505083828151811061128257611281611faf565b5b602002602001018190525050808060010191505061114a565b508092505050919050565b6112ae6113f1565b73ffffffffffffffffffffffffffffffffffffffff166112cc610e03565b73ffffffffffffffffffffffffffffffffffffffff161461132b576112ef6113f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113229190611953565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600015158152602001600060038111156114ab576114aa611a13565b5b8152602001600081525090565b6000604051905090565b600080fd5b6000819050919050565b6114da816114c7565b81146114e557600080fd5b50565b6000813590506114f7816114d1565b92915050565b6004811061150a57600080fd5b50565b60008135905061151c816114fd565b92915050565b60008060408385031215611539576115386114c2565b5b6000611547858286016114e8565b92505060206115588582860161150d565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115a76115a261159d84611562565b611582565b611562565b9050919050565b60006115b98261158c565b9050919050565b60006115cb826115ae565b9050919050565b6115db816115c0565b82525050565b60006020820190506115f660008301846115d2565b92915050565b611605816114c7565b82525050565b60808201600082015161162160008501826115fc565b50602082015161163460208501826115fc565b50604082015161164760408501826115fc565b50606082015161165a60608501826115fc565b50505050565b6000608082019050611675600083018461160b565b92915050565b600060208284031215611691576116906114c2565b5b600061169f848285016114e8565b91505092915050565b60006116b382611562565b9050919050565b6116c3816116a8565b81146116ce57600080fd5b50565b6000813590506116e0816116ba565b92915050565b6000602082840312156116fc576116fb6114c2565b5b600061170a848285016116d1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061174b83836115fc565b60208301905092915050565b6000602082019050919050565b600061176f82611713565b611779818561171e565b93506117848361172f565b8060005b838110156117b557815161179c888261173f565b97506117a783611757565b925050600181019050611788565b5085935050505092915050565b600060208201905081810360008301526117dc8184611764565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611832826117e9565b810181811067ffffffffffffffff82111715611851576118506117fa565b5b80604052505050565b60006118646114b8565b90506118708282611829565b919050565b60006080828403121561188b5761188a6117e4565b5b611895608061185a565b905060006118a5848285016114e8565b60008301525060206118b9848285016114e8565b60208301525060406118cd848285016114e8565b60408301525060606118e1848285016114e8565b60608301525092915050565b600060808284031215611903576119026114c2565b5b600061191184828501611875565b91505092915050565b611923816114c7565b82525050565b600060208201905061193e600083018461191a565b92915050565b61194d816116a8565b82525050565b60006020820190506119686000830184611944565b92915050565b600060808284031215611984576119836117e4565b5b61198e608061185a565b9050600061199e848285016114e8565b60008301525060206119b2848285016114e8565b60208301525060406119c6848285016114e8565b60408301525060606119da848285016114e8565b60608301525092915050565b6000608082840312156119fc576119fb6114c2565b5b6000611a0a8482850161196e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611a5357611a52611a13565b5b50565b6000819050611a6482611a42565b919050565b6000611a7482611a56565b9050919050565b611a8481611a69565b82525050565b6000602082019050611a9f6000830184611a7b565b92915050565b608082016000820151611abb60008501826115fc565b506020820151611ace60208501826115fc565b506040820151611ae160408501826115fc565b506060820151611af460608501826115fc565b50505050565b6000608082019050611b0f6000830184611aa5565b92915050565b611b1e816116a8565b82525050565b60008115159050919050565b611b3981611b24565b82525050565b611b4881611a69565b82525050565b61010082016000820151611b6560008501826115fc565b506020820151611b786020850182611b15565b506040820151611b8b60408501826115fc565b506060820151611b9e60608501826115fc565b506080820151611bb160808501826115fc565b5060a0820151611bc460a0850182611b30565b5060c0820151611bd760c0850182611b3f565b5060e0820151611bea60e08501826115fc565b50505050565b600061010082019050611c066000830184611b4e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61010082016000820151611c4f60008501826115fc565b506020820151611c626020850182611b15565b506040820151611c7560408501826115fc565b506060820151611c8860608501826115fc565b506080820151611c9b60808501826115fc565b5060a0820151611cae60a0850182611b30565b5060c0820151611cc160c0850182611b3f565b5060e0820151611cd460e08501826115fc565b50505050565b6000611ce68383611c38565b6101008301905092915050565b6000602082019050919050565b6000611d0b82611c0c565b611d158185611c17565b9350611d2083611c28565b8060005b83811015611d51578151611d388882611cda565b9750611d4383611cf3565b925050600181019050611d24565b5085935050505092915050565b60006020820190508181036000830152611d788184611d00565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dba826114c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dec57611deb611d80565b5b600182019050919050565b6000606082019050611e0c6000830186611944565b611e196020830185611944565b611e26604083018461191a565b949350505050565b611e3781611b24565b8114611e4257600080fd5b50565b600081519050611e5481611e2e565b92915050565b600060208284031215611e7057611e6f6114c2565b5b6000611e7e84828501611e45565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ec1826114c7565b9150611ecc836114c7565b925082611edc57611edb611e87565b5b828204905092915050565b6000611ef2826114c7565b9150611efd836114c7565b9250828202611f0b816114c7565b91508282048414831517611f2257611f21611d80565b5b5092915050565b6000611f34826114c7565b9150611f3f836114c7565b9250828201905080821115611f5757611f56611d80565b5b92915050565b6000604082019050611f72600083018561191a565b611f7f6020830184611a7b565b9392505050565b6000604082019050611f9b6000830185611944565b611fa8602083018461191a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122094f19e18a340600e54662193ce7df7ca4b250e418ee37bef388f8cda474870b764736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806383c4bc91116100ad578063e91cc62411610071578063e91cc624146102bc578063ecdb086c146102da578063f2fde38b146102f8578063fa6916c314610314578063fbc82be01461034457610121565b806383c4bc911461022857806386c7e257146102465780638da5cb5b146102645780639427862014610282578063b3db78801461029e57610121565b8063313da78f116100f4578063313da78f1461019a578063440ba5b9146101ca57806369ec6357146101e6578063715018a614610202578063732a764e1461020c57610121565b806310087fb11461012657806321df0da7146101425780632602c8d4146101605780632e17de781461017e575b600080fd5b610140600480360381019061013b9190611522565b610374565b005b61014a61091b565b60405161015791906115e1565b60405180910390f35b610168610945565b6040516101759190611660565b60405180910390f35b6101986004803603810190610193919061167b565b610987565b005b6101b460048036038101906101af91906116e6565b610c08565b6040516101c191906117c2565b60405180910390f35b6101e460048036038101906101df919061167b565b610c9f565b005b61020060048036038101906101fb91906116e6565b610cb1565b005b61020a610da2565b005b610226600480360381019061022191906118ed565b610db6565b005b610230610def565b60405161023d9190611929565b60405180910390f35b61024e610df9565b60405161025b9190611929565b60405180910390f35b61026c610e03565b6040516102799190611953565b60405180910390f35b61029c600480360381019061029791906119e6565b610e2c565b005b6102a6610e65565b6040516102b39190611929565b60405180910390f35b6102c4610e6f565b6040516102d19190611a8a565b60405180910390f35b6102e2610e86565b6040516102ef9190611afa565b60405180910390f35b610312600480360381019061030d91906116e6565b610ec8565b005b61032e6004803603810190610329919061167b565b610f4e565b60405161033b9190611bf0565b60405180910390f35b61035e600480360381019061035991906116e6565b61105a565b60405161036b9190611d5e565b60405180910390f35b600082036103ae576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008154809291906103c190611daf565b9190505550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161042593929190611df7565b6020604051808303816000875af1158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190611e5a565b50600080600381111561047e5761047d611a13565b5b82600381111561049157610490611a13565b5b1461051157600160038111156104aa576104a9611a13565b5b8260038111156104bd576104bc611a13565b5b1461050557600260038111156104d6576104d5611a13565b5b8260038111156104e9576104e8611a13565b5b146104f957600b60030154610500565b600b600201545b61050c565b600b600101545b610518565b600b600001545b9050600080600381111561052f5761052e611a13565b5b83600381111561054257610541611a13565b5b146105c2576001600381111561055b5761055a611a13565b5b83600381111561056e5761056d611a13565b5b146105b6576002600381111561058757610586611a13565b5b83600381111561059a57610599611a13565b5b146105aa576007600301546105b1565b6007600201545b6105bd565b6007600101545b6105c9565b6007600001545b905060008060038111156105e0576105df611a13565b5b8460038111156105f3576105f2611a13565b5b14610667576001600381111561060c5761060b611a13565b5b84600381111561061f5761061e611a13565b5b1461065f576002600381111561063857610637611a13565b5b84600381111561064b5761064a611a13565b5b1461065757600c61065a565b60065b610662565b60035b61066a565b60015b60ff169050600081600c61067e9190611eb6565b6064848861068c9190611ee7565b6106969190611eb6565b6106a09190611eb6565b905080600460008282546106b49190611f29565b9250508190555060035460045411156106f9576040517f9399240300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600254908060018154018082558091505060019003906000526020600020016000909190919091505560405180610100016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185426107a39190611f29565b81526020018781526020016000151581526020018660038111156107ca576107c9611a13565b5b8152602001828152506005600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff021916908360038111156108a2576108a1611a13565b5b021790555060e082015181600601559050503373ffffffffffffffffffffffffffffffffffffffff167f8acf475137e0cd74ca7f611d16b1e6383ec9a9c71a8e5b85967781b9c7214d1187600f60009054906101000a900460ff1660405161090b929190611f5d565b60405180910390a2505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61094d6113f9565b6007604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b60006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a27576040517f59cc8a2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160009054906101000a900460ff1615610a70576040517fd831531200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030154421015610aae576040517fa84ca57100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600601548460040154610b429190611f29565b6040518363ffffffff1660e01b8152600401610b5f929190611f86565b6020604051808303816000875af1158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190611e5a565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7582600601548360040154610bef9190611f29565b604051610bfc9190611929565b60405180910390a25050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c9357602002820191906000526020600020905b815481526020019060010190808311610c7f575b50505050509050919050565b610ca76112a6565b8060038190555050565b610cb96112a6565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306003546040518463ffffffff1660e01b8152600401610d5b93929190611df7565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e9190611e5a565b5050565b610daa6112a6565b610db4600061132d565b565b610dbe6112a6565b80600b6000820151816000015560208201518160010155604082015181600201556060820151816003015590505050565b6000600454905090565b6000600354905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e346112a6565b8060076000820151816000015560208201518160010155604082015181600201556060820151816003015590505050565b6000600254905090565b6000600f60009054906101000a900460ff16905090565b610e8e611421565b600b604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b610ed06112a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f399190611953565b60405180910390fd5b610f4b8161132d565b50565b610f56611449565b6005600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16600381111561103357611032611a13565b5b600381111561104557611044611a13565b5b81526020016006820154815250509050919050565b60606000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156110e757602002820191906000526020600020905b8154815260200190600101908083116110d3575b505050505090506000815167ffffffffffffffff81111561110b5761110a6117fa565b5b60405190808252806020026020018201604052801561114457816020015b611131611449565b8152602001906001900390816111295790505b50905060005b825181101561129b57600083828151811061116857611167611faf565b5b602002602001015190506005600082815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16600381111561124f5761124e611a13565b5b600381111561126157611260611a13565b5b815260200160068201548152505083828151811061128257611281611faf565b5b602002602001018190525050808060010191505061114a565b508092505050919050565b6112ae6113f1565b73ffffffffffffffffffffffffffffffffffffffff166112cc610e03565b73ffffffffffffffffffffffffffffffffffffffff161461132b576112ef6113f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113229190611953565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600015158152602001600060038111156114ab576114aa611a13565b5b8152602001600081525090565b6000604051905090565b600080fd5b6000819050919050565b6114da816114c7565b81146114e557600080fd5b50565b6000813590506114f7816114d1565b92915050565b6004811061150a57600080fd5b50565b60008135905061151c816114fd565b92915050565b60008060408385031215611539576115386114c2565b5b6000611547858286016114e8565b92505060206115588582860161150d565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115a76115a261159d84611562565b611582565b611562565b9050919050565b60006115b98261158c565b9050919050565b60006115cb826115ae565b9050919050565b6115db816115c0565b82525050565b60006020820190506115f660008301846115d2565b92915050565b611605816114c7565b82525050565b60808201600082015161162160008501826115fc565b50602082015161163460208501826115fc565b50604082015161164760408501826115fc565b50606082015161165a60608501826115fc565b50505050565b6000608082019050611675600083018461160b565b92915050565b600060208284031215611691576116906114c2565b5b600061169f848285016114e8565b91505092915050565b60006116b382611562565b9050919050565b6116c3816116a8565b81146116ce57600080fd5b50565b6000813590506116e0816116ba565b92915050565b6000602082840312156116fc576116fb6114c2565b5b600061170a848285016116d1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061174b83836115fc565b60208301905092915050565b6000602082019050919050565b600061176f82611713565b611779818561171e565b93506117848361172f565b8060005b838110156117b557815161179c888261173f565b97506117a783611757565b925050600181019050611788565b5085935050505092915050565b600060208201905081810360008301526117dc8184611764565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611832826117e9565b810181811067ffffffffffffffff82111715611851576118506117fa565b5b80604052505050565b60006118646114b8565b90506118708282611829565b919050565b60006080828403121561188b5761188a6117e4565b5b611895608061185a565b905060006118a5848285016114e8565b60008301525060206118b9848285016114e8565b60208301525060406118cd848285016114e8565b60408301525060606118e1848285016114e8565b60608301525092915050565b600060808284031215611903576119026114c2565b5b600061191184828501611875565b91505092915050565b611923816114c7565b82525050565b600060208201905061193e600083018461191a565b92915050565b61194d816116a8565b82525050565b60006020820190506119686000830184611944565b92915050565b600060808284031215611984576119836117e4565b5b61198e608061185a565b9050600061199e848285016114e8565b60008301525060206119b2848285016114e8565b60208301525060406119c6848285016114e8565b60408301525060606119da848285016114e8565b60608301525092915050565b6000608082840312156119fc576119fb6114c2565b5b6000611a0a8482850161196e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611a5357611a52611a13565b5b50565b6000819050611a6482611a42565b919050565b6000611a7482611a56565b9050919050565b611a8481611a69565b82525050565b6000602082019050611a9f6000830184611a7b565b92915050565b608082016000820151611abb60008501826115fc565b506020820151611ace60208501826115fc565b506040820151611ae160408501826115fc565b506060820151611af460608501826115fc565b50505050565b6000608082019050611b0f6000830184611aa5565b92915050565b611b1e816116a8565b82525050565b60008115159050919050565b611b3981611b24565b82525050565b611b4881611a69565b82525050565b61010082016000820151611b6560008501826115fc565b506020820151611b786020850182611b15565b506040820151611b8b60408501826115fc565b506060820151611b9e60608501826115fc565b506080820151611bb160808501826115fc565b5060a0820151611bc460a0850182611b30565b5060c0820151611bd760c0850182611b3f565b5060e0820151611bea60e08501826115fc565b50505050565b600061010082019050611c066000830184611b4e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61010082016000820151611c4f60008501826115fc565b506020820151611c626020850182611b15565b506040820151611c7560408501826115fc565b506060820151611c8860608501826115fc565b506080820151611c9b60808501826115fc565b5060a0820151611cae60a0850182611b30565b5060c0820151611cc160c0850182611b3f565b5060e0820151611cd460e08501826115fc565b50505050565b6000611ce68383611c38565b6101008301905092915050565b6000602082019050919050565b6000611d0b82611c0c565b611d158185611c17565b9350611d2083611c28565b8060005b83811015611d51578151611d388882611cda565b9750611d4383611cf3565b925050600181019050611d24565b5085935050505092915050565b60006020820190508181036000830152611d788184611d00565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dba826114c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dec57611deb611d80565b5b600182019050919050565b6000606082019050611e0c6000830186611944565b611e196020830185611944565b611e26604083018461191a565b949350505050565b611e3781611b24565b8114611e4257600080fd5b50565b600081519050611e5481611e2e565b92915050565b600060208284031215611e7057611e6f6114c2565b5b6000611e7e84828501611e45565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ec1826114c7565b9150611ecc836114c7565b925082611edc57611edb611e87565b5b828204905092915050565b6000611ef2826114c7565b9150611efd836114c7565b9250828202611f0b816114c7565b91508282048414831517611f2257611f21611d80565b5b5092915050565b6000611f34826114c7565b9150611f3f836114c7565b9250828201905080821115611f5757611f56611d80565b5b92915050565b6000604082019050611f72600083018561191a565b611f7f6020830184611a7b565b9392505050565b6000604082019050611f9b6000830185611944565b611fa8602083018461191a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122094f19e18a340600e54662193ce7df7ca4b250e418ee37bef388f8cda474870b764736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 207,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)192"
      },
      {
        "astId": 209,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "stakeId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 216,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "totalAllocationForReward",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 218,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "rewardAccumulated",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 264,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "stakeIdToStakeInfo",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(StakeInfo)259_storage)"
      },
      {
        "astId": 269,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "userStakeIds",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 272,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "apy",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(APYPackage)241_storage"
      },
      {
        "astId": 275,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "packageDuration",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(PackageDuration)232_storage"
      },
      {
        "astId": 278,
        "contract": "contracts/Staking.sol:StakeGuard",
        "label": "packageType",
        "offset": 0,
        "slot": "15",
        "type": "t_enum(PackageType)223"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)192": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(PackageType)223": {
        "encoding": "inplace",
        "label": "enum StakeGuard.PackageType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(StakeInfo)259_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StakeGuard.StakeInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(StakeInfo)259_storage"
      },
      "t_struct(APYPackage)241_storage": {
        "encoding": "inplace",
        "label": "struct StakeGuard.APYPackage",
        "members": [
          {
            "astId": 234,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "oneMonth",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 236,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "threeMonth",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 238,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "sixMonth",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 240,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "twelveMonth",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(PackageDuration)232_storage": {
        "encoding": "inplace",
        "label": "struct StakeGuard.PackageDuration",
        "members": [
          {
            "astId": 225,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "oneMonth",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 227,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "threeMonth",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 229,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "sixMonth",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 231,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "twelveMonth",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(StakeInfo)259_storage": {
        "encoding": "inplace",
        "label": "struct StakeGuard.StakeInfo",
        "members": [
          {
            "astId": 243,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "stakeId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 245,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "staker",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 247,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "stakedAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 249,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "unstakeAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 251,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "stakedAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 253,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "isUnstaked",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 256,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "package",
            "offset": 1,
            "slot": "5",
            "type": "t_enum(PackageType)223"
          },
          {
            "astId": 258,
            "contract": "contracts/Staking.sol:StakeGuard",
            "label": "reward",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}